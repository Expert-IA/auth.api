name: DAST - OWASP ZAP Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-run:
    name: Build and Run Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Give mvnw permission
        run: chmod +x ./mvnw

      - name: Build application
        run: ./mvnw clean package

      - name: Run application
        run: |
          nohup java -jar target/*.jar &
          sleep 30

      - name: Install ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok

      - name: Expose local server with ngrok
        run: |
          ngrok http 8080 > ngrok.log &
          sleep 10
          NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV

  zap-scan:
    name: ZAP DAST Scan
    runs-on: ubuntu-latest
    needs: build-and-run
    steps:
      - name: Run ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          target: ${{ env.NGROK_URL }}
          issue_title: 'Relat√≥rio de Vulnerabilidades DAST da ExpertIA'
          fail_action: true
          format: html

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: report_html.html
