name: Integrated Security Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  sast:
    name: SAST - Semgrep
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Semgrep
        run: pip install semgrep

      - name: Run Semgrep SAST scan
        run: semgrep --config=auto --output=semgrep-report.sarif --sarif

      - name: Upload Semgrep Report
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-report
          path: semgrep-report.sarif

  dast:
    name: DAST - OWASP ZAP
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://localhost:8080' # Altere para o endereço da sua aplicação em staging/teste
          rules_file_name: ''
          cmd_options: ''
        continue-on-error: true

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap_report.html

  sca:
    name: SCA - Dependency-Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dependency-Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.1/dependency-check-8.4.1-release.zip
          unzip dependency-check-8.4.1-release.zip -d dependency-check
          chmod +x dependency-check/bin/dependency-check.sh

      - name: Run Dependency-Check Scan
        run: dependency-check/bin/dependency-check.sh --project "auth.api" --scan . --format HTML --out dependency-check-report.html

      - name: Upload SCA Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: dependency-check-report.html

  notify-on-failure:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: [sast, dast, sca]
    if: failure()
    steps:
      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          message: |
            Falha no Pipeline de Segurança para *${{ github.repository }}* no workflow *${{ github.workflow }}*. 
            Verifique os logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
